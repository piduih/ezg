BEGIN

DECLARE v_finished int DEFAULT 0;
DECLARE v_user varchar(100) DEFAULT "";
DECLARE v_sp_left int DEFAULT 0;
DECLARE v_sp_right int DEFAULT 0;

-- dapatkan user id --
DECLARE cur_user CURSOR FOR 
SELECT DISTINCT usrname
FROM user;

DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_finished = 1;

OPEN cur_user;

get_user: LOOP
FETCH cur_user INTO v_user;

IF v_finished = 1 THEN
LEAVE get_user;
END IF;

-- try coding here --
-- dapatkan sum package base on user id utk left --
SELECT sum(bi_package) 
FROM binary_hdr
WHERE bi_no like concat('%',v_user,'%')
and bi_user not like concat('%',v_user,'%')
and bi_pos = 'L'
and bi_cal <> 'Y'
INTO v_sp_left;

-- kalau data tak null baru insert
IF v_sp_left IS NOT null THEN
	INSERT INTO binary_hdr_cal (bi_user, bi_pos, bi_date, bi_package)
	VALUES(v_user, 'L', now(), v_sp_left);
END IF;

-- dapatkan sum package base on user id utk right --
SELECT sum(bi_package) 
FROM binary_hdr
WHERE bi_no like concat('%',v_user,'%')
and bi_user not like concat('%',v_user,'%')
and bi_pos = 'R'
AND bi_cal <> 'Y'
INTO v_sp_right;

-- kalau data tak null baru insert
IF v_sp_right IS NOT null THEN
	INSERT INTO binary_hdr_cal (bi_user, bi_pos, bi_date, bi_package)
	VALUES(v_user, 'R', now(), v_sp_right);
END IF;
END LOOP get_user;

-- update selepas loop
-- untuk elak data berulang masuk ke binary_hdr_cal
UPDATE binary_hdr
SET bi_cal = 'Y'
WHERE bi_cal <> 'Y';

CLOSE cur_user;

END